/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mytranslator.view.panels;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import mytranslator.model.logic.Word;
import mytranslator.model.readers.ReaderDom;
import mytranslator.view.SwingAttribute;
import mytranslator.view.dialogs.DialogMean;


/**
 *
 * @author Ariel Arnedo
 */
public class PanelWork extends javax.swing.JPanel implements SwingAttribute{

    /**
     * Creates new form PanelWork
     */
    public PanelWork() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textWord = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(BORDER_SECUNDARY);

        textWord.setFont(FONT_MAIN);
        textWord.setForeground(new java.awt.Color(102, 102, 102));
        textWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textWordActionPerformed(evt);
            }
        });
        textWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textWordKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textWord, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textWord, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textWordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textWordKeyTyped
        if(evt.isControlDown()){
            if(evt.getKeyChar() == KeyEvent.VK_ENTER){
                if(textWord.getText().compareTo("") != 0){
                    Word word = new Word(textWord.getText().contains(":") ? 
                            textWord.getText().split(":")[0] : textWord.getText());
                    SwingUtilities.invokeLater(()->{
                        DialogMean dialogMean = new DialogMean(word, Type.INPUT_TRANSLATION);
                        dialogMean.setVisible(true);
                    });

                }else{
                    java.awt.Toolkit.getDefaultToolkit().beep();
                }
            }else if(evt.getKeyChar() == KeyEvent.VK_DELETE){
                if(textWord.getText().compareTo("") != 0){
                    textWord.setText("");
                }
            }
        }
    }//GEN-LAST:event_textWordKeyTyped

    private void textWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textWordActionPerformed
        
        if(textWord.getText().compareTo("") != 0){
            try{
                Word word = ReaderDom.read(textWord.getText());

                if(word != null){
                    SwingUtilities.invokeLater(()->{
                        DialogMean dialogMean = new DialogMean(word, Type.VIEW_TRANSLATION);
                        dialogMean.setVisible(true);
                    });
                }else{
                    if(!textWord.getText().contains("Unknow"))
                        textWord.setText(textWord.getText()+": Unknown");
                }
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error de Lectura", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            java.awt.Toolkit.getDefaultToolkit().beep();
        }
    
    }//GEN-LAST:event_textWordActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField textWord;
    // End of variables declaration//GEN-END:variables
}
